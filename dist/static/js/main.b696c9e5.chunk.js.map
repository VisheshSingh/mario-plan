{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","href","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projectList","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ProjectDetails","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","_ref","signInWithEmailAndPassword","catch","err","SignUp","firstname","lastname","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b696c9e5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedInLinks = props => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={props.signOut} href=\"#!\">\r\n          Sign out\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignedInLinks);\r\n","export const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(resp => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstname: newUser.firstname,\r\n            lastname: newUser.lastname,\r\n            initials: newUser.firstname[0] + newUser.lastname[0]\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Sign up</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = props => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          MarioPlan\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  // console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = props => {\r\n  const { notifications } = props;\r\n  // console.log(notifications)\r\n  // const notificationsList =\r\n  //   notifications.length\r\n  //     ? notifications.map(item => {\r\n  //         return (\r\n  //           <li key={item.id}>\r\n  //             <span className=\"pink-text\">{item.user}</span>\r\n  //             <span>{item.content}</span>\r\n  //             <div className=\"grey-text note-date\">\r\n  //               {moment(item.time.toDate()).fromNow()}\r\n  //             </div>\r\n  //           </li>\r\n  //         );\r\n  //       })\r\n  //     : null;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map(item => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <span className=\"pink-text\">{item.user}</span>&nbsp;\r\n                    <span>{item.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(item.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = props => {\r\n  const { project } = props;\r\n  return (\r\n    <div className=\"card z-depth-0 project-details\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          Posted by {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(project.createdAt.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = props => {\r\n  const { projects } = props;\r\n  let projectList = projects ? (\r\n    projects.map(project => {\r\n      return (\r\n        <Link to={\"/projects/\" + project.id} key={project.id}>\r\n          <ProjectSummary project={project} />\r\n        </Link>\r\n      );\r\n    })\r\n  ) : (\r\n    <p>No projects at this time...</p>\r\n  );\r\n  return <div className=\"project-list section\">{projectList}</div>;\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  // console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 4, orderBy: [\"time\", \"desc\"] }\r\n  ])\r\n)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nclass ProjectDetails extends Component {\r\n  render() {\r\n    let { project, auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    if (project) {\r\n      return (\r\n        <div className=\"container section project-details\">\r\n          <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n              <span className=\"card-title\">{project.title}</span>\r\n              <p>{project.content}</p>\r\n            </div>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n              <p>\r\n                Posted by {project.authorFirstName} {project.authorLastName}\r\n              </p>\r\n              <p>{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container center\">\r\n          <p>Loading project...</p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  // console.log(state);\r\n  let id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn z-depth-0 pink lighten-1\">Login</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n            {authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Signup</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstname\">First Name</label>\r\n            <input type=\"text\" id=\"firstname\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastname\">Last Name</label>\r\n            <input type=\"text\" id=\"lastname\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn z-depth-0 pink lighten-1\">Sign up</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n            {authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create new project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Project title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              className=\"materialize-textarea\"\r\n              id=\"content\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn z-depth-0 pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateProject);\r\n","export const createProject = project => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // make async call to database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstname,\r\n        authorLastName: profile.lastname,\r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n      })\r\n      .then(() => {\r\n        dispatch({\r\n          type: \"CREATE_PROJECT\",\r\n          project: project\r\n        });\r\n      })\r\n      .catch(err => {\r\n        dispatch({\r\n          type: \"CREATE_PROJECT_ERROR\",\r\n          err\r\n        });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\nimport Navbar from \"./components/layout/Navbar\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/projects/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"Login error\");\r\n      return {\r\n        ...state,\r\n        authError: \"Login failed\"\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"Login success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"Signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"Signup error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"Signout success\");\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: 1, title: \"help me find peach\", content: \"blah blah blah\" },\r\n    { id: 2, title: \"collect all the stars\", content: \"blah blah blah\" },\r\n    { id: 3, title: \"Raise the flag\", content: \"blah blah blah\" }\r\n  ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"created project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"Error creating project\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n// Initialize Firebase\r\nvar config = {\r\n  apiKey: \"AIzaSyCPyy-G-T4JSJ-uMmo7Igl5w06XU6MhXCY\",\r\n  authDomain: \"mario-plan-d591d.firebaseapp.com\",\r\n  databaseURL: \"https://mario-plan-d591d.firebaseio.com\",\r\n  projectId: \"mario-plan-d591d\",\r\n  storageBucket: \"mario-plan-d591d.appspot.com\",\r\n  messagingSenderId: \"702208093921\"\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\",\n      attachAuthIsReady: true\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: http://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n});\n"],"sourceRoot":""}